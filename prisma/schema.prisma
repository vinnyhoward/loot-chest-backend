// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String                @id @default(cuid())
  email              String                @unique
  username           String                @unique
  password           String
  isAdmin            Boolean               @default(false)
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt
  chestInteractions  UserChestInteraction[]
  prizeLogs          PrizeLog[]
}

model UserChestInteraction {
  id                 String               @id @default(cuid())
  userId             String
  sanityChestId      String    
  openedAt           DateTime             @default(now())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  User               User                 @relation(fields: [userId], references: [id])
}

model PrizeLog {
  id                 String               @id @default(cuid())
  userId             String
  prizeFulfillmentId String?              @unique
  wonAt              DateTime             @default(now()) 
  sanityChestId      String
  rollValue          Float
  interactionId      String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  User               User                 @relation(fields: [userId], references: [id])
  prizeFulfillment   PrizeFulfillment?    @relation(fields: [prizeFulfillmentId], references: [id])
}

model PrizeFulfillment {
  id                  String              @id @default(cuid())
  firstName           String?
  lastName            String?
  phoneNumber         String?
  email               String?
  address             String?
  country             String?
  state               String?
  city                String?
  zip                 String?
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt
  cryptoWalletAddress String?
  PrizeLog            PrizeLog?
}
